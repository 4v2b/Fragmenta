import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';

// import Backend from 'i18next-http-backend';
// import LanguageDetector from 'i18next-browser-languagedetector';
// don't want to use this?
// have a look at the Quick start guide 
// for passing in lng and translations on init

i18n
    // .use(Backend)

    // .use(LanguageDetector)
    .use(initReactI18next)
    .init({
        fallbackLng: 'en',
        debug: true,

        interpolation: {
            escapeValue: false, // not needed for react as it escapes by default
        },
        resources: {
            en: {
                translation: {
                    roles : {
                        admin: "Admin",
                        owner : "Owner",
                        member: "Member",
                        guest: "Guest"
                    },
                    greeting: "Welcome on the main page ü§ó",
                    fields:{
                        name: "Name",
                        email: "Email",
                        password : "Password",
                        repeatPassword : "Repeat password",
                        login : "Login",
                        register : "Register",
                        logout: "Log out",
                        delete : "Delete",
                        addMembers : "Add members",
                        findUser : "Find user"
                    },
                    auth:{
                        toLogin: "Already have an account?",
                        toRegister: "Do not have any account?"
                    },
                    createWorkspace: "Create workspace",
                    workspaceStub: "None",
                    boards: "Boards",
                    members : "Members",
                    general : "General"
                }
            },
            uk: {

                translation: {
                    roles : {
                        admin: "–ê–¥–º—ñ–Ω",
                        owner : "–í–ª–∞—Å–Ω–∏–∫",
                        member: "–£—á–∞—Å–Ω–∏–∫",
                        guest: "–ì—ñ—Å—Ç—å"
                    },
                    greeting: "–í—ñ—Ç–∞—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ü§ó",
                    fields:{
                        name: "–Ü–º'—è",
                        email: "–ï–ª. –ø–æ—à—Ç–∞",
                        password : "–ü–∞—Ä–æ–ª—å",
                        repeatPassword : "–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –ø–∞—Ä–æ–ª—å",
                        login : "–£–≤—ñ–π—Ç–∏",
                        register : "–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è",
                        logout: "–í–∏–π—Ç–∏",
                        delete : "–í–∏–¥–∞–ª–∏—Ç–∏",
                        
                        addMembers : "–î–æ–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏–∫—ñ–≤",
                        findUser : "–ó–Ω–∞–π—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
                    },
                    auth:{
                        toLogin: "–í–∂–µ –º–∞—î—Ç–µ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å?",
                        toRegister: "–ù–µ –º–∞—î—Ç–µ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É?"
                    },

                    createWorkspace: "–ù–æ–≤–∏–π —Ä–æ–±–æ—á–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä",
                    workspaceStub: "–ù–µ –æ–±—Ä–∞–Ω–æ",
                    boards: "–î–æ—à–∫–∏",
                    members : "–£—á–∞—Å–Ω–∏–∫–∏",
                    general : "–ó–∞–≥–∞–ª—å–Ω–µ"
                }
            }
        }
    });


export default i18n;